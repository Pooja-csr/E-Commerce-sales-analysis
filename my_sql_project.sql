SHOW DATABASES;
USE E_COMMERCE;
SHOW TABLES;

-- Q1 SHOW ALL THE CATEGORY OF ITEMS THIS E-COMMERCE BUSINESS DEAL WITH?
SELECT 
    CATEGORYNAME, CATEGORYID
FROM
    CATEGORIES;
    

-- ALL DISTINCT PRODUCTS:-
SELECT DISTINCT
    NAME AS PRODUCT_NAME
FROM
    PRODUCTS;


-- Q2 SHOW HOW OLD THIS BUSINESS IS TO KNOW THAT GET THE FIRST ORDER DATE FROM THE TABLES?
SELECT 
    ORDERDATE
FROM
    ORDERS
ORDER BY ORDERDATE
LIMIT 1;


-- Q3 SHOW TOTAL PROFIT GAIN FROM ALL categories.
SELECT 
    P1.CATEGORYID, sum(P1.PRICE * DT.QUANTITY) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT ON P1.PRODUCTID = DT.PRODUCTID
GROUP BY CATEGORYID
ORDER BY TOTAL_REVENUE DESC;


-- Q4  SHOW TOTAL PROFIT GAIN FROM ALL SALES  WITH THE PRODUCT NAME
SELECT
    P1.NAME, P1.CATEGORYID,
    sum(P1.PRICE * DT.QUANTITY)  AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT ON P1.PRODUCTID = DT.PRODUCTID
GROUP BY P1.CATEGORYID;


-- Q5 CUSTOMERS WHO GAVE MORE THAN 1 REVIEW ?
SELECT CUSTOMERID, COUNT(REVIEWID) AS TOTAL_REVIEWS
FROM REVIEWS 
GROUP BY CUSTOMERID 
HAVING COUNT(REVIEWID) > 1;


-- Q6  CHECK THE RATING AND FIND IF MOST OF THE FEEDBACKS WERE POSITIVE OR NEGATIVE?
SELECT 
    SUM(RATING) as TOTAL_POSITIVE
FROM
    REVIEWS
WHERE
    RATING >= 4;
    
   -- NEGATIVE FEEDBACK  
    
    SELECT 
    SUM(RATING) AS TOTAL_NEGATIVE FROM
    REVIEWS
WHERE
    RATING < 4; 
     
     
-- Q 7 WHAT IS THE MOST ORDERED ITEM FROM THE LIST OF CATEGORIES what are their total ordered quantities and category IDs AND PRODUCT NAME?
     
SELECT P1.NAME, P1.CATEGORYID, SUM(OD.QUANTITY) AS MOST_ORDERED_QTY
FROM PRODUCTS P1 
JOIN ORDERDETAILS OD ON P1.PRODUCTID = OD.PRODUCTID
GROUP BY P1.PRODUCTID 
ORDER BY MOST_ORDERED_QTY DESC;


-- Q8.	Show the order details by 5 most expensive products and their revenue generated from orders?
SELECT 
    P1.PRODUCTID,
    P1.NAME,
    P1.PRICE,
    P1.STOCKQUANTITY,
    SUM(OD.QUANTITY * P1.PRICE) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
JOIN
    ORDERDETAILS OD ON P1.PRODUCTID = OD.PRODUCTID
GROUP BY 
    P1.PRODUCTID, P1.NAME, P1.PRICE, P1.STOCKQUANTITY
ORDER BY 
    SUM(OD.QUANTITY * P1.PRICE) DESC
LIMIT 5;

     
-- Q9 .Names the customers id who have not ordered any product from us?
SELECT 
    *FROM
    customers
WHERE customerid  not in(select  distinct customerid from orders);


-- Q10 .Name the category with the highest revenue?
SELECT 
    C1.CATEGORYNAME,
    P1.CATEGORYID,
    Sum(P1.PRICE * OD.QUANTITY - DA.DISCOUNTAMOUNT) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    orderdetails OD on P1.PRODUCTID = OD.PRODUCTID
        JOIN
    DISCOUNTS DA on DA.PRODUCTID =P1.PRODUCTID
        JOIN
    CATEGORIES C1 ON P1.CATEGORYID=C1.CATEGORYID
GROUP BY P1.CATEGORYID
ORDER BY TOTAL_REVENUE DESC
LIMIT 1;



-- 11 .Show the category with the least orders
SELECT 
    C1.CATEGORYNAME,
    P1.CATEGORYID,
    Sum(P1.PRICE * OD.QUANTITY - DA.DISCOUNTAMOUNT) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    orderdetails OD on P1.PRODUCTID = OD.PRODUCTID
        JOIN
    DISCOUNTS DA on DA.PRODUCTID =P1.PRODUCTID
        JOIN
    CATEGORIES C1 ON P1.CATEGORYID=C1.CATEGORYID
GROUP BY P1.CATEGORYID
ORDER BY TOTAL_REVENUE 
LIMIT 1;


-
-- 12  How many days did each order take to be delivered?
SELECT 
    ORDERID, DATEDIFF(DELIVERYDATE, SHIPDATE) DELIVERY_DAYS
FROM
    SHIPPING;
    
--- same as above in diff way
SELECT 
    s.OrderID,
    DATEDIFF(s.DeliveryDate, s.ShipDate) AS delivery_days
FROM
    Shipping s
WHERE
    s.ShipDate IS NOT NULL
        AND s.DeliveryDate IS NOT NULL;

-- Q 13 fnd the sum of all orders ?
SELECT 
    SUM(ORDERID) AS TOTAL_ORDERS
FROM
    ORDERS;
    
SELECT COUNT(DISTINCT ORDERID) AS TOTAL_ORDERS FROM ORDERS;

-- Q 14 fnd the sum of all orders ?    
SELECT COUNT(DISTINCT ORDERID) AS TOTAL_ORDERS FROM ORDERS;

-- Q15 HIGEST SALES IN WEEKEND OR WEEKDAYS?
SELECT 
    COUNT(ORDERID) AS TOTAL,
    ORDERDATE,
    IF(DAYOFWEEK(ORDERDATE) IN (1 , 7),
        'WEEKEND',
        'WEEKDAY') AS DAY_TYPE
FROM
    ORDERS
GROUP BY DAY_TYPE;


-- Q16 What is the total number of products, total price value, and total stock available in the PRODUCTS table?
SELECT 
    COUNT(NAME) AS 'TOTAL PRODUCTS',
    SUM(PRICE) AS 'TOTAL AMOUNT',
    SUM(STOCKQUANTITY) AS 'TOTAL_STOCK'
FROM
    PRODUCTS;
    



-- Q17 FIND THE CATEGORY NAMES AND ITS TOTAL PRICES.
SELECT 
    C1.CATEGORYNAME, SUM(P1.PRICE) AS SUM_OF_PRICE
FROM
    PRODUCTS P1
        INNER JOIN
    CATEGORIES C1 ON C1.CATEGORYID = P1.CATEGORYID
GROUP BY CATEGORYNAME;


-- Q18 FIND THE REVENUE OF DRESS CATEGORY ITEM WISE (CATEGORY=6)?
  
SELECT DISTINCT
    P1.CATEGORYID,
    P1.NAME,
    P1.PRICE * DT.QUANTITY AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT ON P1.PRODUCTID = DT.PRODUCTID
WHERE
    CATEGORYID = 6
ORDER BY TOTAL_REVENUE DESC;
    
  -- Q19 FIND THE TOTAL REVENUE FROM  ACESSESSORY CATEGORY?
SELECT DISTINCT
    P1.CATEGORYID,
    P1.NAME,
    P1.PRICE * DT.QUANTITY AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT ON P1.PRODUCTID = DT.PRODUCTID
WHERE
    CATEGORYID = 8
ORDER BY TOTAL_REVENUE DESC;

    
    
-- -- Q20 return the no of product names and get the product ids and category ids.?
SELECT 
    categoryid, name, COUNT(PRODUCTID) AS total_pid
FROM
    PRODUCTS
GROUP BY categoryid
ORDER BY total_pid;


-- Q21 find the minimum price, max price and avg price value in products?
SELECT 
    NAME, MAX(PRICE)
FROM
    PRODUCTS;
SELECT 
    NAME, MIN(PRICE)
FROM
    PRODUCTS;
SELECT 
    NAME, AVG(PRICE)
FROM
    PRODUCTS;

-- Q22 RETRIEVE THE DATA WHERE THERE IS NAME AND TOTAL STOCKQUANTITY OF CATEGORY ID 8 WHICH IS ACCESSORIES.?
SELECT 
    NAME, SUM(STOCKQUANTITY) AS TOTAL_STOCK
FROM
    PRODUCTS
WHERE
    CATEGORYID = 8
ORDER BY TOTAL_STOCK
LIMIT 5;

-- Q23 NAME THE CATEGORY WITH CATEGORYID AND HIGHEST PRICE?
SELECT 
    C1.CATEGORYNAME, C1.CATEGORYID, PRICE
FROM
    PRODUCTS P1
        JOIN
    CATEGORIES C1 ON C1.CATEGORYID = P1.CATEGORYID
WHERE
    P1.PRICE = (SELECT 
            MAX(PRICE) AS MAX_PRICE
        FROM
            PRODUCTS);
            
            
 
-- Q24 FIND THE ITEM NAME AND CATEGORY NAME WITH TOTAL PRICE.
SELECT 
    P1.NAME, C1.CATEGORYNAME, SUM(P1.PRICE) AS TOTAL_PRICE
FROM
    PRODUCTS P1
        JOIN
    CATEGORIES C1 ON C1.CATEGORYID = P1.CATEGORYID
GROUP BY C1.CATEGORYNAME;-- GROUP BY C1.CATEGORYNAME;


-- Q25 Find out customer names, and total count of orders ?
SELECT 
    CUST1.NAME, COUNT(O1.ORDERID) AS TOTAL_COUNT
FROM
    CUSTOMERS CUST1
        JOIN
    PRODUCTS P1
        JOIN
    ORDERS O1 ON CUST1.CUSTOMERID = O1.CUSTOMERID
GROUP BY CUST1.NAME;


-- Q26 FOR CATEGORY NAME AND TOTAL OF PRICE FOR SHOES 
SELECT 
    C1.CATEGORYNAME, SUM(P1.PRICE) AS TOTAL_AMOUNT
FROM
    PRODUCTS P1
        JOIN
    CATEGORIES C1 ON C1.CATEGORYID = P1.CATEGORYID;

-- Q27 NAME, TOTAL QUANTITY WITH THE PRODUCTS.
SELECT 
    P1.NAME, SUM(OD.QUANTITY) AS TOTAL_QUANTITY
FROM
    ORDERDETAILS OD
        JOIN
    PRODUCTS P1 ON P1.PRODUCTID = OD.PRODUCTID
GROUP BY P1.NAME;

-- Q28 SHOW CATEGORYID, REVIEWID,CUSTID, PRODUCTID, RATING COMMENTS  WHERE WE GOT RATINGS (4,5) WITH COMMENTS?
SELECT 
    R1.REVIEWID,
    R1.CUSTOMERID,
    P1.PRODUCTID,
    P1.CATEGORYID,
    R1.RATING,
    R1.COMMENTS
FROM
    REVIEWS R1
        LEFT JOIN
    PRODUCTS P1 ON R1.PRODUCTID = P1.PRODUCTID
WHERE
    R1.RATING BETWEEN 4 AND 5
ORDER BY RATING DESC;


-- Q29 FIND CUSTOMER NAME WITH THE PRODUCT THEY PURCHASED?
SELECT 
    CUST1.NAME AS CUSTOMER_NAME, P1.NAME AS PRODUCT_NAME, COUNT(P1.PRODUCTID) AS TOTAL_ORDERS
FROM
    CUSTOMERS CUST1
        JOIN
    ORDERS O1 ON CUST1.CUSTOMERID = O1.CUSTOMERID
        JOIN
    ORDERDETAILS OD ON O1.ORDERID = OD.ORDERID
        JOIN
    PRODUCTS P1 ON OD.PRODUCTID = P1.PRODUCTID
 WHERE CUST1.NAME = 'Susan Robbins' GROUP BY P1.NAME, CUST1.NAME;




-- Q30 Names the customers id who ordered at least?
SELECT 
    CUSTOMERID, COUNT(ORDERID) AS tot_orders
FROM
    orders
WHERE
    CUSTOMERID IS NOT NULL
GROUP BY CUSTOMERID;


-- Q 31 TOTAL REMAINING STOCK ?
SELECT 
    SUM(P1.STOCKQUANTITY) - SUM(OD.QUANTITY) AS REMAINING_STOCK
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS OD ON P1.PRODUCTID = OD.PRODUCTID;



-- Q32 TOTAL REVENUE FOR CATEGORY ID 4 WHICH IS LAPTOP?
SELECT DISTINCT
    P1.CATEGORYID,
    P1.NAME,
    SUM(P1.PRICE) * SUM(DT.QUANTITY) - SUM(D.DISCOUNTAMOUNT) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT
        JOIN
    DISCOUNTS D ON P1.PRODUCTID = DT.PRODUCTID = D.PRODUCTID
WHERE
    CATEGORYID = 4;
    
    
-- Q33  FOR CATEGORY 1 WHAT IS THE TOTAL REVENUE? 
SELECT DISTINCT
    P1.CATEGORYID, C1.CATEGORYNAME,
    P1.NAME,
    SUM(P1.PRICE) * SUM(DT.QUANTITY) - SUM(D.DISCOUNTAMOUNT) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT
        JOIN 
    DISCOUNTS D
    JOIN
    CATEGORIES C1 ON P1.PRODUCTID = DT.PRODUCTID  AND P1.CATEGORYID=C1.CATEGORYID
WHERE
    C1.CATEGORYID = 1;
    

    
    
-- Q33  REVENUE FOR MOBILE
SELECT DISTINCT
    P1.CATEGORYID,
    P1.NAME,
    SUM(P1.PRICE) * SUM(DT.QUANTITY) - SUM(D.DISCOUNTAMOUNT) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT
        JOIN
    DISCOUNTS D ON P1.PRODUCTID = DT.PRODUCTID = D.PRODUCTID
WHERE
    CATEGORYID = 2;
    
    
    -- FOR JEANS REVENUE
SELECT DISTINCT
    P1.CATEGORYID,
    P1.NAME,
    SUM(P1.PRICE) * SUM(DT.QUANTITY) - SUM(D.DISCOUNTAMOUNT) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT
        JOIN
    DISCOUNTS D ON P1.PRODUCTID = DT.PRODUCTID = D.PRODUCTID
WHERE
    CATEGORYID = 3;
    
    
    -- SHIRTS REVENUE
SELECT DISTINCT
    P1.CATEGORYID,
    P1.NAME,
    SUM(P1.PRICE) * SUM(DT.QUANTITY) - SUM(D.DISCOUNTAMOUNT) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT
        JOIN
    DISCOUNTS D ON P1.PRODUCTID = DT.PRODUCTID = D.PRODUCTID
WHERE
    CATEGORYID = 5;
    
    -- FOR BEAUTY REVENUE 
SELECT DISTINCT
    P1.CATEGORYID,
    P1.NAME,
    SUM(P1.PRICE) * SUM(DT.QUANTITY) - SUM(D.DISCOUNTAMOUNT) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT
        JOIN
    DISCOUNTS D ON P1.PRODUCTID = DT.PRODUCTID = D.PRODUCTID
WHERE
    CATEGORYID = 7;
    
    
 -- Q33  COUNT THE TOTAL PRODUCT NAMES WITH THE DESIGNATED CATEGORIES?
 
SELECT 
    P1.NAME, COUNT(P1.NAME) AS TOT_COUNT, C1.CATEGORYNAME
FROM
    PRODUCTS P1
        JOIN
    CATEGORIES C1 ON C1.CATEGORYID = P1.CATEGORYID
GROUP BY C1.CATEGORYNAME;


-- Q34 NAME THE PRODUCTS WITH 5 RATINGS?
SELECT 
    P1.PRODUCTID, P1.NAME, RATING
FROM
    REVIEWS R1
        JOIN
    PRODUCTS P1 ON P1.PRODUCTID = R1.PRODUCTID
WHERE
    RATING = 5;


-- Q35  NAME THE PRODUCTS WITH 1 RATINGS?
SELECT 
    P1.PRODUCTID, P1.NAME, RATING
FROM
    REVIEWS R1
        JOIN
    PRODUCTS P1 ON P1.PRODUCTID = R1.PRODUCTID
WHERE
    RATING = 1;


-- Q36 COUNT OF COMMENTS WITH THE RATINGS 1 -5 IN TOTAL?
SELECT 
    RATING, COUNT(COMMENTS) AS TOTAL_COMMENTS
FROM
    REVIEWS
GROUP BY RATING
ORDER BY RATING DESC;


-- Q 37 SUM OF TOTAL REMAINING ITEMS IN STOCK WITH PRODUCT NAME WISE?
SELECT 
    P1.NAME,
    P1.CATEGORYID,
    SUM(P1.STOCKQUANTITY) - SUM(OD.QUANTITY) AS REMAIN_STOCK
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS OD ON P1.PRODUCTID = OD.PRODUCTID
GROUP BY P1.NAME;

 


-- Q38 SHOW CATEGORYID, REVIEWID,CUSTID, PRODUCTID, RATING COMMENTS  WHERE WE GOT RATINGS (1,2,3) WITH COMMENTS?
SELECT 
    R1.REVIEWID,
    R1.CUSTOMERID,
    P1.PRODUCTID,
    P1.CATEGORYID,
    R1.RATING,
    R1.COMMENTS
FROM
    REVIEWS R1
        LEFT JOIN
    PRODUCTS P1 ON R1.PRODUCTID = P1.PRODUCTID
WHERE
    RATING BETWEEN 1 AND 3
ORDER BY RATING DESC;



-- Q39 NAME THE CATEGORIES WHERE WE GOT MAXIMUM COMMENTS
SELECT 
    P1.CATEGORYID, COUNT(R1.COMMENTS) AS TOT_COMMENTS
FROM
    REVIEWS R1
        JOIN
    PRODUCTS P1 ON P1.PRODUCTID = R1.PRODUCTID
GROUP BY P1.CATEGORYID
ORDER BY TOT_COMMENTS DESC
LIMIT 1;



-- 40 NAME THE VALUE WITH THE HIGHEST PRODUCT VALUE?
SELECT 
    NAME, MAX(PRICE) AS HIGHEST_VALUE
FROM
    PRODUCTS
GROUP BY NAME
ORDER BY HIGHEST_VALUE DESC
LIMIT 10;



-- Q41 GET THE YEAR WHEN THE FIRST ORDER WAS PLACED?
SELECT EXTRACT(YEAR FROM MIN(ORDERDATE)) AS FIRST_ORD_YEAR FROM ORDERS;    -- EXTRACT YEAR
SELECT EXTRACT(YEAR FROM CURDATE()) - EXTRACT(YEAR FROM '2024-01-12') AS NO_OF_YEAR;   -- TOTAL NUMBER OF YEARS 


-- Q42 TOTAL PRODUCT SOLD?
SELECT SUM(OD.QUANTITY) AS TOTAL_SOLD 
FROM PRODUCTS P1 
JOIN ORDERDETAILS OD ON P1.PRODUCTID = OD.PRODUCTID;




-- Q43  HOW WAS THE SALES TREND SINCE BEGINNING TILL DATE (DATEWISE ASC)?
SELECT 
    O1.ORDERDATE,
    SUM(P1.PRICE * OD.QUANTITY) AS TOTAL_SALES
FROM
    ORDERS O1
        JOIN
    ORDERDETAILS OD ON O1.ORDERID = OD.ORDERID
    JOIN PRODUCTS P1 ON OD.PRODUCTID=P1.PRODUCTID
WHERE O1.ORDERDATE BETWEEN '2024-01-06' AND '2024-12-27'
GROUP BY O1.ORDERDATE
ORDER BY O1.ORDERDATE;



-- Q44 NO OF DAYS THIS BUSINESS WORKED UNTIL LAST ORDER?
SELECT 
    DATEDIFF(CURDATE(), '2024-01-12') AS TOTAL_DAYS
FROM
    ORDERS
GROUP BY CUSTOMERID
LIMIT 1;




-- Q45 FIND THE CATEGORY NAME WITH ITS AVG PRODUCT PRICE?
SELECT 
    C1.CATEGORYNAME, ROUND(AVG(P1.PRICE), 0) AS AVG_PRICE
FROM
    PRODUCTS P1
        JOIN
    CATEGORIES C1 ON C1.CATEGORYID = P1.CATEGORYID
GROUP BY C1.CATEGORYNAME;




-- Q46 FIND THE NAME, TOTAL PRICE WITH TOTAL GIVEN DISCOUNT FOR MacBook Pro 811 PRODUCT?
SELECT 
    P1.NAME,
    SUM(P1.PRICE) AS TOTAL_QTY,
    SUM(D1.DISCOUNTAMOUNT) TOT_DISCOUNT
FROM
    PRODUCTS P1
        JOIN
    DISCOUNTS D1 ON D1.PRODUCTID = P1.PRODUCTID
WHERE
    P1.NAME = 'MacBook Pro 811';




-- Q 47 FIND THE SALES IN FIRST 6MONTHS WITH THE CATEGORY ID, AMOUNT AND ORDER BY ORDERDATE ASCENDING?
SELECT 
    MAX(P1.PRICE * OD.QUANTITY - DA.DISCOUNTAMOUNT) AS TOTAL,
    C1.CATEGORYNAME,
    O1.ORDERDATE
FROM
    PRODUCTS P1
        JOIN
    orderdetails OD
        JOIN
    DISCOUNTS DA
        JOIN
    ORDERS O1
        JOIN
    categories C1 ON P1.PRODUCTID = DA.PRODUCTID
        AND P1.PRODUCTID = OD.PRODUCTID
        AND O1.ORDERID = OD.ORDERID
        AND C1.CATEGORYID = P1.CATEGORYID
GROUP BY C1.CATEGORYNAME
HAVING O1.ORDERDATE BETWEEN '2024-01-06' AND '2024-07-04'
ORDER BY O1.ORDERDATE;
 
 
 
 
 -- Q 48 FIND THE SUM OF TOTAL FIRST 6MOHNTHS REVENUE
SELECT 
    SUM(P1.PRICE * OD.QUANTITY - DA.DISCOUNTAMOUNT) AS TOTAL,
    C1.CATEGORYNAME,
    O1.ORDERDATE
FROM
    PRODUCTS P1
        JOIN
    orderdetails OD
        JOIN
    DISCOUNTS DA
        JOIN
    ORDERS O1
        JOIN
    categories C1 ON P1.PRODUCTID = DA.PRODUCTID
        AND P1.PRODUCTID = OD.PRODUCTID
        AND O1.ORDERID = OD.ORDERID
        AND C1.CATEGORYID = P1.CATEGORYID
GROUP BY C1.CATEGORYNAME
HAVING O1.ORDERDATE BETWEEN '2024-01-06' AND '2024-07-04'
ORDER BY O1.ORDERDATE; 
 
 
 
 --- Q49 - return the no. of product names and get the product ids and category ids.?
SELECT 
    categoryid, name, COUNT(PRODUCTID) AS total_pid
FROM
    PRODUCTS
GROUP BY categoryid;




-- -- Q50  Return the name, category id and sum of stock left  ?
SELECT 
    P1.NAME,
    P1.CATEGORYID,
    SUM(P1.STOCKQUANTITY) - SUM(OD.QUANTITY) AS REMAIN_STOCK
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS OD ON P1.PRODUCTID = OD.PRODUCTID
GROUP BY P1.CATEGORYID;


-- Q51  show the trend of the sales  ?
SELECT 
    DATE_FORMAT(O1.OrderDate, '%Y-%m') AS MONTH,
    ROUND(SUM(P1.PRICE) * SUM(DT.QUANTITY) - SUM(D.DISCOUNTAMOUNT),0) AS TOTAL_REVENUE
FROM
    PRODUCTS P1
        JOIN
    ORDERDETAILS DT JOIN DISCOUNTS D JOIN  ORDERS O1 ON P1.PRODUCTID = DT.PRODUCTID 
    AND P1.PRODUCTID=D.PRODUCTID  AND O1.ORDERID=DT.ORDERID GROUP BY MONTH
ORDER BY TOTAL_REVENUE desc;
